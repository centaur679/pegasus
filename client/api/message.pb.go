// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestIPRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestIPRequest) Reset()         { *m = TestIPRequest{} }
func (m *TestIPRequest) String() string { return proto.CompactTextString(m) }
func (*TestIPRequest) ProtoMessage()    {}
func (*TestIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *TestIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestIPRequest.Unmarshal(m, b)
}
func (m *TestIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestIPRequest.Marshal(b, m, deterministic)
}
func (m *TestIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestIPRequest.Merge(m, src)
}
func (m *TestIPRequest) XXX_Size() int {
	return xxx_messageInfo_TestIPRequest.Size(m)
}
func (m *TestIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestIPRequest proto.InternalMessageInfo

func (m *TestIPRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TestIPResponse struct {
	ReceiveIP            string   `protobuf:"bytes,1,opt,name=receiveIP,proto3" json:"receiveIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestIPResponse) Reset()         { *m = TestIPResponse{} }
func (m *TestIPResponse) String() string { return proto.CompactTextString(m) }
func (*TestIPResponse) ProtoMessage()    {}
func (*TestIPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *TestIPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestIPResponse.Unmarshal(m, b)
}
func (m *TestIPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestIPResponse.Marshal(b, m, deterministic)
}
func (m *TestIPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestIPResponse.Merge(m, src)
}
func (m *TestIPResponse) XXX_Size() int {
	return xxx_messageInfo_TestIPResponse.Size(m)
}
func (m *TestIPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestIPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestIPResponse proto.InternalMessageInfo

func (m *TestIPResponse) GetReceiveIP() string {
	if m != nil {
		return m.ReceiveIP
	}
	return ""
}

func init() {
	proto.RegisterType((*TestIPRequest)(nil), "api.TestIPRequest")
	proto.RegisterType((*TestIPResponse)(nil), "api.TestIPResponse")
}

func init() {
	proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd)
}

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52,
	0xe6, 0xe2, 0x0d, 0x49, 0x2d, 0x2e, 0xf1, 0x0c, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11,
	0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3,
	0x95, 0xf4, 0xb8, 0xf8, 0x60, 0x8a, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x64, 0xb8, 0x38,
	0x8b, 0x52, 0x93, 0x53, 0x33, 0xcb, 0x52, 0x3d, 0x03, 0xa0, 0x4a, 0x11, 0x02, 0x49, 0x6c, 0x60,
	0x0b, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x2f, 0x1e, 0x01, 0x71, 0x00, 0x00, 0x00,
}
